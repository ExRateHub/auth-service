services:
  postgres_db_test:
    image: postgres:16-alpine
    container_name: auth_database_test
    profiles:
      - test
    env_file:
      - .env.test
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data_test:/var/lib/postgresql/data
    ports:
      - "${DATABASE_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  postgres_db:
    image: postgres:16-alpine
    container_name: auth_database
    networks:
      - auth_network
    profiles:
      - default
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DATABASE_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  migrations:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: migrations
    networks:
      - auth_network
    profiles:
      - default
    environment:
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_HOST: postgres_db
    depends_on:
      postgres_db:
        condition: service_healthy
    command: [ "make", "migrate" ]

  auth_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth_service
    networks:
      - auth_network
    profiles:
      - default
    environment:
      SERVER_HOST: "0.0.0.0"
      SERVER_PORT: 8000
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_HOST: postgres_db
    volumes:
      - .:/app
      - /app/.venv
    ports:
      - "8000:8000"
    depends_on:
      postgres_db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    command: ["make", "run-dev-serve"]

volumes:
  postgres_data:
  postgres_data_test:

networks:
  auth_network:
    driver: bridge