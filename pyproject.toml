[project]
name = "auth-service"
version = "0.0.0"
description = "Authentication microservice for the ExramateHub platform, responsible for user registration, entrance, control of API-key aids and issuing JWT tokens."
readme = "README.md"
authors = [
    { name = "SharinAlex", email = "alex.shavrin200303@gmail.com" },
    { name = "theVeenrok", email = "veenrok@veenrok.com" },
]
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.16.1",
    "granian>=2.3.1",
    "litestar>=2.16.0",
    "psycopg[binary]>=3.2.9",
    "pydantic[email]>=2.11.5",
    "pydantic-settings>=2.9.1",
    "sqlalchemy[asyncio]>=2.0.41",
    "pwdlib[argon2]>=0.2.1",
    "pyjwt>=2.10.1",
    "redis[hiredis]>=6.1.0",
    "aiosmtplib>=4.0.1",
    "dishka>=1.6.0",
    "adaptix[pydantic,sqlalchemy]>=3.0.0b11",
    "black[dev]>=25.1.0",
]

[project.optional-dependencies]
dev = [
    "mypy>=1.15.0",
    "ruff>=0.11.11",
    "granian[reload]>=2.3.1",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pre-commit>=4.2.0",
    "sqlalchemy[mypy]>=2.0.41",
]

[tool.mypy]
python_version = "3.13"
ignore_missing_imports = true
strict = true
files = ["src", "tests"]
allow_redefinition = false
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]

[tool.pydantic-mypy]
init_forbid_extra = false
init_typed = true

[tool.ruff]
target-version = "py313"
required-version = ">=0.11.12"
src = ["src", "tests", "migrations"]
line-length = 120
indent-width = 4

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 80
quote-style = "double"
indent-style = "space"
line-ending = "lf"
skip-magic-trailing-comma = false

[tool.ruff.lint]
select = [
    "E",
    "I",
    "F",
    "W",
    "C90",
]
ignore = []

[tool.ruff.lint.flake8-annotations]
mypy-init-return = true
suppress-none-returning = true

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.pytest.ini_options]
addopts = "-p pytest_asyncio"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
